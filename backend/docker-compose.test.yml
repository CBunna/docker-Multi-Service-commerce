services:
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce-postgres-test-v3
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres # Fixed: use default postgres user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis-test-v3
    ports:
      - "6380:6379"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-backend-test-v3
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - POSTGRES_DB=ecommerce
      - POSTGRES_USER=postgres # Fixed: changed from admin to postgres
      - POSTGRES_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_PORT=5000
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - test-network

networks:
  test-network:
    driver: bridge
